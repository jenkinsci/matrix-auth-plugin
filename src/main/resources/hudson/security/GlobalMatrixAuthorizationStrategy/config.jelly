<!--
The MIT License

Copyright (c) 2004-2011, Sun Microsystems, Inc., Kohsuke Kawaguchi, Seiji Sogabe

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:d="jelly:define" xmlns:st="jelly:stapler" xmlns:f="/lib/form" xmlns:l="/lib/layout">
  <f:block xmlns:local="local">
    <j:set var="groups" value="${descriptor.allGroups}"/>
    <d:taglib uri="local">
      <!-- generate one row for the sid name @sid -->
      <d:tag name="isEditable">
        <j:choose>
          <j:when test="${readOnlyMode == null}">
            <l:hasPermission permission="${instance.getEditingPermission()}">
              <!--
              While a permission check should be good enough, we prefer readOnlyMode to catch exceptions like node
              properties configured for cloud templates (once https://github.com/jenkinsci/jenkins/pull/4531 is merged):
              A user with Overall/SystemRead can view the form and with global Computer/Configure the user also passes the
              permission check. The user still isn't able to configure the cloud, so we want this to be disabled anyway.

              readOnlyMode is null when the form doesn't set the flag:

                - regular (freestyle) job configuration forms before Jenkins 2.223.
                - folder configuration at least up to cloudbees-folder 6.12 (JENKINS-62218)

              In that case, check for the applicable permission.
              -->
              <d:invokeBody/>
            </l:hasPermission>
          </j:when>
          <j:when test="${not readOnlyMode}">
            <!--
            Allow explicitly setting readOnlyMode = false to render with editing controls despite possible lack of permissions.
            -->
            <d:invokeBody/>
          </j:when>
        </j:choose>
      </d:tag>
      <d:tag name="row">
        <j:set var="permissionEntry" value="${descriptor.entryFor(attrs.type, attrs.sid)}"/>
        <j:choose>
          <j:when test="${attrs.sid == 'authenticated' and attrs.type == 'GROUP'}">
            <td class="left-most">
              <div tooltip="${%Internal group authenticated}" class="mas-table__cell">
                <l:icon src="symbol-people-outline plugin-ionicons-api" class="icon-sm"/>${%Authenticated Users}
              </div>
            </td>
          </j:when>
          <j:when test="${attrs.sid == 'anonymous' and attrs.type == 'USER'}">
            <td class="left-most">
              <div tooltip="${%Internal user anonymous}" class="mas-table__cell">
                <l:icon src="symbol-person-outline plugin-ionicons-api" class="icon-sm"/>${%Anonymous}
              </div>
            </td>
          </j:when>
          <j:otherwise>
            <td class="left-most">${title}</td>
          </j:otherwise>
        </j:choose>
        <j:set var="typeName" value="${descriptor.getTypeLabel(attrs.type.toLowerCase())}"/>
        <j:forEach var="g" items="${groups}">
          <j:forEach var="p" items="${g.permissions}">
            <j:if test="${descriptor.showPermission(p)}">
              <td
                  data-implied-by-list="${descriptor.impliedByList(p)}"
                  data-permission-id="${p.id}"
                  data-tooltip-enabled="${%tooltip_enabled(p.group.title, p.name, typeName, attrs.sid)}"
                  data-tooltip-disabled="${%tooltip_disabled(p.group.title, p.name, typeName, attrs.sid)}">
                <f:checkbox name="[${p.id}]" checked="${permissionEntry != null and instance.hasExplicitPermission(permissionEntry,p)}"/>
              </td>
            </j:if>
          </j:forEach>
        </j:forEach>
        <local:isEditable sid="${attrs.sid}" type="${attrs.type}">
          <td class="stop">
            <div class="mas-table__cell">
              <a href="#" class="selectall" tooltip="${%selectall(h.escape(attrs.sid))}" data-html-tooltip="${%selectall(h.escape(attrs.sid))}">
                <l:icon alt="${%Select all}" src="symbol-select-all plugin-matrix-auth" class="icon-sm"/>
              </a>
              <a href="#" class="unselectall" tooltip="${%unselectall(h.escape(attrs.sid))}" data-html-tooltip="${%unselectall(h.escape(attrs.sid))}">
                <l:icon alt="${%Unselect all}" src="symbol-unselect-all plugin-matrix-auth" class="icon-sm"/>
              </a>
              <j:if test="${(attrs.sid != 'authenticated' or attrs.type != 'GROUP') and (attrs.sid != 'anonymous' or attrs.type != 'USER')}">
                <a href="#" class="remove" tooltip="${%remove(h.escape(attrs.sid))}" data-html-tooltip="${%remove(h.escape(attrs.sid))}">
                  <l:icon alt="${%Remove user/group}" src="symbol-trash-outline plugin-ionicons-api" class="icon-sm icon-red" />
                </a>
              </j:if>
              <j:if test="${attrs.type == 'EITHER'}">
                <!-- migration options -->
                <a href="#" class="migrate migrate_user" tooltip="${%migrate_user(h.escape(attrs.sid))}" data-html-tooltip="${%migrate_user(h.escape(attrs.sid))}">
                  <l:icon alt="${%Migrate entry to user}" src="symbol-person-outline plugin-ionicons-api" class="icon-sm" />
                </a>
                <a href="#" class="migrate migrate_group" tooltip="${%migrate_group(h.escape(attrs.sid))}" data-html-tooltip="${%migrate_group(h.escape(attrs.sid))}">
                  <l:icon alt="${%Migrate entry to group}" src="symbol-people-outline plugin-ionicons-api" class="icon-sm" />
                </a>
              </j:if>
            </div>
          </td>
        </local:isEditable>
      </d:tag>
    </d:taglib>
    <j:set var="strategyid" value="${descriptor.jsonSafeClassName}" />
    <j:set var="tableid" value="${h.generateId()}"/>
    <table id="${strategyid}" data-table-id="${tableid}" class="center-align global-matrix-authorization-strategy-table ${readOnlyMode ? 'read-only' : ''}" name="data">

      <!-- The first row will show grouping -->
      <tr class="group-row">
        <td rowspan="2" class="pane-header blank">
          ${%User/group}
        </td>
        <j:forEach var="g" items="${groups}">
          <j:set var="cnt" value="${0}" />
          <j:forEach var="p" items="${g.permissions}">
            <j:if test="${descriptor.showPermission(p)}">
              <j:set var="cnt" value="${cnt+1}"/>
            </j:if>
          </j:forEach>

          <td class="pane-header" colspan="${cnt}">
            ${g.title}
          </td>
        </j:forEach>
        <local:isEditable>
          <td rowspan="2" class="stop" />
        </local:isEditable>
      </tr>
      <!-- The second row for individual permission -->
      <tr class="caption-row">
        <j:forEach var="g" items="${groups}">
          <j:forEach var="p" items="${g.permissions}">
            <j:if test="${descriptor.showPermission(p)}">
              <th class="pane" data-html-tooltip="${descriptor.getDescription(p)}" tooltip="${descriptor.getDescription(p)}">
                <!--
                  Tooltip needs to be HTML for GlobalMatrixAuthorizationStrategy.PermissionNotImpliedBy formatting.
                  So set 'data-html-tooltip' for Tippy and 'tooltip' for YUI.
                 -->
                <span>
                  ${p.name}
                </span>
              </th>
            </j:if>
          </j:forEach>
        </j:forEach>
      </tr>

      <tr name="[USER:anonymous]">
        <local:row type="USER" sid="anonymous" />
      </tr>
      <tr name="[GROUP:authenticated]">
        <local:row type="GROUP" sid="authenticated" />
      </tr>
      <j:forEach var="entry" items="${instance.allPermissionEntries}">
        <j:if test="${entry.sid != 'authenticated' or entry.type.toString() != 'GROUP'}">
          <tr name="[${entry.type}:${entry.sid}]" class="permission-row" data-descriptor-url="${descriptor.descriptorFullUrl}">
            <local:row title="${entry.sid}" sid="${entry.sid}" type="${entry.type.toString()}" />
          </tr>
        </j:if>
      </j:forEach>


      <!-- template row to be used for adding a new row -->
      <j:set var="id" value="${h.generateId()}"/>
      <tr id="${id}" style="display:none" class="permission-row" data-descriptor-url="${descriptor.descriptorFullUrl}" name="__unused__">
        <local:row sid="__SID__" />
      </tr>
    </table>
    <local:isEditable>
      <div class="jenkins-!-margin-top-2 jenkins-buttons-row jenkins-buttons-row--equal-width">
        <button type="button" class="jenkins-button matrix-auth-add-button" id="${id}UserButton"
              data-table-id="${id}"
              data-type="USER"
              data-type-label="${%user}"
              data-message-prompt="${%userPrompt}"
              data-message-empty="${%userEmpty}"
              data-message-error="${%userError}">${%Add userâ€¦}</button>
        <button type="button" class="jenkins-button matrix-auth-add-button" value="" id="${id}GroupButton"
              data-table-id="${id}"
              data-type="GROUP"
              data-type-label="${%group}"
              data-message-prompt="${%groupPrompt}"
              data-message-empty="${%groupEmpty}"
              data-message-error="${%groupError}">${%Add groupâ€¦}</button>
        <f:helpLink featureName="${%Permissions matrix}" url="${descriptor.find('hudson.security.GlobalMatrixAuthorizationStrategy$DescriptorImpl').getHelpFile('user-group')}"/>
      </div>
      <f:helpArea />
      <j:if test="${descriptor.hasAmbiguousEntries(instance)}">
        <div class="alert alert-warning jenkins-!-margin-top-2" data-table-id="${tableid}">
          ${%ambiguous}
        </div>
      </j:if>
    </local:isEditable>
    <st:adjunct includes="hudson.security.table"/>
  </f:block>
</j:jelly>
